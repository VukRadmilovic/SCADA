// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCADA.Utils;

#nullable disable

namespace SCADA.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SCADA.Models.AddressValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddressValues");
                });

            modelBuilder.Entity("SCADA.Models.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnalogInputTagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Limit")
                        .HasColumnType("float");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SnoozedUntil")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Triggered")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alarms");
                });

            modelBuilder.Entity("SCADA.Models.AlarmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTriggered")
                        .HasColumnType("bit");

                    b.Property<double>("Limit")
                        .HasColumnType("float");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AlarmLogs");
                });

            modelBuilder.Entity("SCADA.Models.Tag", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagName");

                    b.ToTable("Tags", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SCADA.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SCADA.Models.AnalogInput", b =>
                {
                    b.HasBaseType("SCADA.Models.Tag");

                    b.Property<int>("Driver")
                        .HasColumnType("int");

                    b.Property<double>("HighLimit")
                        .HasColumnType("float");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.Property<double>("LowLimit")
                        .HasColumnType("float");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnalogInputs", (string)null);
                });

            modelBuilder.Entity("SCADA.Models.AnalogOutput", b =>
                {
                    b.HasBaseType("SCADA.Models.Tag");

                    b.Property<double>("HighLimit")
                        .HasColumnType("float");

                    b.Property<double>("InitialValue")
                        .HasColumnType("float");

                    b.Property<double>("LowLimit")
                        .HasColumnType("float");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.ToTable("AnalogOutputs", (string)null);
                });

            modelBuilder.Entity("SCADA.Models.DigitalInput", b =>
                {
                    b.HasBaseType("SCADA.Models.Tag");

                    b.Property<int>("Driver")
                        .HasColumnType("int");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int");

                    b.ToTable("DigitalInputs", (string)null);
                });

            modelBuilder.Entity("SCADA.Models.DigitalOutput", b =>
                {
                    b.HasBaseType("SCADA.Models.Tag");

                    b.Property<bool>("InitialValue")
                        .HasColumnType("bit");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.ToTable("DigitalOutputs", (string)null);
                });

            modelBuilder.Entity("SCADA.Models.AnalogInput", b =>
                {
                    b.HasOne("SCADA.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("SCADA.Models.AnalogInput", "TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SCADA.Models.AnalogOutput", b =>
                {
                    b.HasOne("SCADA.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("SCADA.Models.AnalogOutput", "TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SCADA.Models.DigitalInput", b =>
                {
                    b.HasOne("SCADA.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("SCADA.Models.DigitalInput", "TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SCADA.Models.DigitalOutput", b =>
                {
                    b.HasOne("SCADA.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("SCADA.Models.DigitalOutput", "TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
